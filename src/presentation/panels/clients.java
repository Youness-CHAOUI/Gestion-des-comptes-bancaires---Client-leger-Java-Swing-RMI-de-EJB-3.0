/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation.panels;

import java.awt.Color;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.*;
import javax.swing.table.*;
import metier.entities.*;
import static presentation.panels.Authentification_Form.*;

/**
 *
 * @author CY_15
 */
public class clients extends javax.swing.JPanel {

    List<Compte> listeComptes;
    List<Client> listeClients;
    
    DefaultTableModel modelComptesClientTable;
    DefaultTableModel modelClientsTable1;
    DefaultTableModel modelOperationsTable;
            
    public clients() 
    {
        initComponents();
        modelComptesClientTable = (DefaultTableModel) comptesClientTable.getModel();
        modelClientsTable1 = (DefaultTableModel) clientsTable1.getModel();
        modelOperationsTable = (DefaultTableModel) operationsTable.getModel();
        
        /* Remplire la table */
        DefaultTableModel model = (DefaultTableModel) tablesComptes.getModel();
        while (model.getRowCount() > 0) model.removeRow(0);
        listeComptes = eBanque.consulterComptes();
        for(Compte c : listeComptes)
            {   
                String numCompte = c.getNumCompte();
                Double s = c.getSolde();
                Object decouvert=null;
                Object taux=null;
                if(c instanceof CompteCourant)
                {
                    CompteCourant cc = (CompteCourant)c;
                    decouvert = cc.getDecouvert();
                }
                else
                {
                    CompteEpargne ce = (CompteEpargne)c;
                    taux = ce.getTaux();
                }  
                Date d = c.getDateCreation();
                Long numEmp = c.getEmploye().getNumEmploye();
                Long codeClient = c.getClient().getCodeClient();
                model.addRow(new Object[]{numCompte, s, taux, decouvert, d, codeClient, numEmp});
            }
        
        /* Remplire le clientsComboBox */
        clientsComboBox.removeAllItems();
        for(Client cl : eBanque.consulterClients())
            clientsComboBox.addItem(cl.getCodeClient()+" - "+cl.getNomClient());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane5 = new javax.swing.JTabbedPane();
        buttonGroup = new javax.swing.ButtonGroup();
        clientsTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPane6 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablesComptes = new javax.swing.JTable();
        ccPanel = new javax.swing.JPanel();
        decouvertLabel = new javax.swing.JLabel();
        decouvertTextBox = new javax.swing.JTextField();
        cePanel = new javax.swing.JPanel();
        tauxLabel = new javax.swing.JLabel();
        tauxTextBox = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        codeClientLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        soldeTextBox = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel18 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        epargneRadioButton = new javax.swing.JRadioButton();
        courantRadioButton = new javax.swing.JRadioButton();
        clientsComboBox = new javax.swing.JComboBox();
        creeCompteButton = new javax.swing.JButton();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        creeClientButton = new javax.swing.JButton();
        npLabel = new javax.swing.JLabel();
        npTextBox = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        clientsTable = new javax.swing.JTable();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        clientsTable1 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        comptesClientTable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        operationsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(973, 558));

        clientsTabbedPane1.setBackground(new java.awt.Color(51, 0, 0));
        clientsTabbedPane1.setForeground(new java.awt.Color(51, 0, 51));
        clientsTabbedPane1.setOpaque(true);
        clientsTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientsTabbedPane1MouseClicked(evt);
            }
        });
        clientsTabbedPane1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                clientsTabbedPane1PropertyChange(evt);
            }
        });

        jTabbedPane6.setBackground(new java.awt.Color(51, 0, 51));
        jTabbedPane6.setForeground(new java.awt.Color(51, 0, 0));

        jPanel7.setBackground(new java.awt.Color(51, 0, 0));
        jPanel7.setForeground(new java.awt.Color(255, 255, 255));

        tablesComptes.setAutoCreateRowSorter(true);
        tablesComptes.setBackground(new java.awt.Color(51, 0, 0));
        tablesComptes.setForeground(new java.awt.Color(255, 255, 255));
        tablesComptes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "Solde", "Taux", "Decouvert", "Date de création", "Client", "Crée par (Employé)"
            }
        ));
        tablesComptes.setFillsViewportHeight(true);
        tablesComptes.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(tablesComptes);

        ccPanel.setBackground(new java.awt.Color(51, 0, 0));
        ccPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Compte courant", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        ccPanel.setToolTipText("");
        ccPanel.setName(""); // NOI18N

        decouvertLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        decouvertLabel.setForeground(new java.awt.Color(255, 255, 255));
        decouvertLabel.setText("Decouvert");

        javax.swing.GroupLayout ccPanelLayout = new javax.swing.GroupLayout(ccPanel);
        ccPanel.setLayout(ccPanelLayout);
        ccPanelLayout.setHorizontalGroup(
            ccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ccPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(decouvertLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(decouvertTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ccPanelLayout.setVerticalGroup(
            ccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ccPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decouvertLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(decouvertTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        cePanel.setBackground(new java.awt.Color(51, 0, 0));
        cePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Compte epargne", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        cePanel.setEnabled(false);

        tauxLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tauxLabel.setForeground(new java.awt.Color(255, 255, 255));
        tauxLabel.setText("Taux");
        tauxLabel.setEnabled(false);

        tauxTextBox.setEnabled(false);
        tauxTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tauxTextBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cePanelLayout = new javax.swing.GroupLayout(cePanel);
        cePanel.setLayout(cePanelLayout);
        cePanelLayout.setHorizontalGroup(
            cePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tauxLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tauxTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        cePanelLayout.setVerticalGroup(
            cePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tauxLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tauxTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel10.setOpaque(false);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Client                    :");

        codeClientLabel.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        codeClientLabel.setForeground(new java.awt.Color(204, 204, 204));

        soldeTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soldeTextBoxActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(204, 204, 204));
        jLabel23.setText("Code : ");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Solde initial             :");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Type de compte    :");

        jPanel8.setBackground(new java.awt.Color(51, 0, 0));

        buttonGroup.add(epargneRadioButton);
        epargneRadioButton.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        epargneRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        epargneRadioButton.setText("         Epargne");
        epargneRadioButton.setOpaque(false);
        epargneRadioButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                epargneRadioButtonMouseClicked(evt);
            }
        });
        epargneRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                epargneRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup.add(courantRadioButton);
        courantRadioButton.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        courantRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        courantRadioButton.setSelected(true);
        courantRadioButton.setText("         Courant");
        courantRadioButton.setOpaque(false);
        courantRadioButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                courantRadioButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(epargneRadioButton)
                    .addComponent(courantRadioButton))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(courantRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(epargneRadioButton)
                .addContainerGap())
        );

        clientsComboBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                clientsComboBoxPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(18, 18, 18)
                                .addComponent(soldeTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(clientsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codeClientLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(soldeTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codeClientLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        creeCompteButton.setBackground(new java.awt.Color(51, 0, 0));
        creeCompteButton.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        creeCompteButton.setForeground(new java.awt.Color(255, 255, 255));
        creeCompteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/business-card-of-a-man-with-contact-info (2).png"))); // NOI18N
        creeCompteButton.setText("   Créer le compte");
        creeCompteButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        creeCompteButton.setContentAreaFilled(false);
        creeCompteButton.setDefaultCapable(false);
        creeCompteButton.setOpaque(true);
        creeCompteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                creeCompteButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                creeCompteButtonMouseReleased(evt);
            }
        });
        creeCompteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creeCompteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(58, 58, 58)
                            .addComponent(cePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(43, 43, 43)
                            .addComponent(ccPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addGap(210, 210, 210)
                            .addComponent(creeCompteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(creeCompteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ccPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane6.addTab("", jPanel7);

        clientsTabbedPane1.addTab("Créer un compte", new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/business-card-of-a-man-with-contact-info (8).png")), jTabbedPane6); // NOI18N
        jTabbedPane6.getAccessibleContext().setAccessibleName("Les informations des comptes");

        jTabbedPane4.setBackground(new java.awt.Color(51, 0, 0));
        jTabbedPane4.setForeground(new java.awt.Color(51, 0, 51));

        jPanel1.setBackground(new java.awt.Color(51, 0, 0));
        jPanel1.setForeground(new java.awt.Color(51, 0, 0));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/client.png"))); // NOI18N

        creeClientButton.setBackground(new java.awt.Color(51, 0, 0));
        creeClientButton.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        creeClientButton.setForeground(new java.awt.Color(255, 255, 255));
        creeClientButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/addClient.png"))); // NOI18N
        creeClientButton.setText("Crée le Client");
        creeClientButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        creeClientButton.setContentAreaFilled(false);
        creeClientButton.setOpaque(true);
        creeClientButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                creeClientButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                creeClientButtonMouseReleased(evt);
            }
        });
        creeClientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creeClientButtonActionPerformed(evt);
            }
        });

        npLabel.setBackground(new java.awt.Color(51, 0, 0));
        npLabel.setFont(new java.awt.Font("Century Gothic", 0, 20)); // NOI18N
        npLabel.setForeground(new java.awt.Color(255, 255, 255));
        npLabel.setText("Nom & Prénom :");

        npTextBox.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N

        clientsTable.setBackground(new java.awt.Color(51, 0, 0));
        clientsTable.setForeground(new java.awt.Color(255, 255, 255));
        clientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Code", "Nom & Prénom", "Nombre de comptes"
            }
        ));
        clientsTable.setFillsViewportHeight(true);
        clientsTable.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(clientsTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(creeClientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(npLabel)
                        .addGap(18, 18, 18)
                        .addComponent(npTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(62, 62, 62))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(npLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(npTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(creeClientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel5)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("", jPanel1);

        clientsTabbedPane1.addTab("Crée un client", new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/addClient1.png")), jTabbedPane4); // NOI18N

        jTabbedPane3.setBackground(new java.awt.Color(51, 0, 0));

        jPanel2.setBackground(new java.awt.Color(51, 0, 0));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/accounting-book.png"))); // NOI18N

        clientsTable1.setBackground(new java.awt.Color(51, 0, 0));
        clientsTable1.setForeground(new java.awt.Color(255, 255, 255));
        clientsTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Code", "Nom & Prénom", "Nombre de comptes"
            }
        ));
        clientsTable1.setFillsViewportHeight(true);
        clientsTable1.setGridColor(new java.awt.Color(255, 255, 255));
        clientsTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientsTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(clientsTable1);

        comptesClientTable.setAutoCreateRowSorter(true);
        comptesClientTable.setBackground(new java.awt.Color(51, 0, 0));
        comptesClientTable.setForeground(new java.awt.Color(255, 255, 255));
        comptesClientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num", "Solde", "Taux", "Decouvert", "Date de création", "Crée par"
            }
        ));
        comptesClientTable.setFillsViewportHeight(true);
        comptesClientTable.setGridColor(new java.awt.Color(255, 255, 255));
        comptesClientTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comptesClientTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(comptesClientTable);

        operationsTable.setAutoCreateRowSorter(true);
        operationsTable.setBackground(new java.awt.Color(51, 0, 0));
        operationsTable.setForeground(new java.awt.Color(255, 255, 255));
        operationsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Montant", "Type", "Date", "Effectuée par"
            }
        ));
        operationsTable.setFillsViewportHeight(true);
        operationsTable.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane5.setViewportView(operationsTable);
        if (operationsTable.getColumnModel().getColumnCount() > 0) {
            operationsTable.getColumnModel().getColumn(0).setPreferredWidth(30);
        }

        jLabel1.setBackground(new java.awt.Color(51, 0, 0));
        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("* Cliquer sur le client pour voir les comptes.");

        jLabel2.setBackground(new java.awt.Color(51, 0, 0));
        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("* Cliquer sur le compte pour voir les opérations.");

        jButton4.setBackground(new java.awt.Color(204, 204, 204));
        jButton4.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/delete.png"))); // NOI18N
        jButton4.setToolTipText("Supprimer un client.");
        jButton4.setBorder(null);
        jButton4.setContentAreaFilled(false);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(204, 204, 204));
        jButton5.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/update-arrows (1).png"))); // NOI18N
        jButton5.setToolTipText("Mettre à jour un client.");
        jButton5.setBorder(null);
        jButton5.setContentAreaFilled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(204, 204, 204));
        jButton6.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/add-button.png"))); // NOI18N
        jButton6.setToolTipText("Ajouter un nouveau client.");
        jButton6.setBorder(null);
        jButton6.setContentAreaFilled(false);
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLabel10)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton4)
                                .addComponent(jButton5)
                                .addComponent(jButton6))
                            .addComponent(jLabel1)))
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        jTabbedPane3.addTab("", jPanel2);

        clientsTabbedPane1.addTab("    Clients", new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/users-group.png")), jTabbedPane3); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(clientsTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(clientsTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void clientsTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientsTabbedPane1MouseClicked
        int index = clientsTabbedPane1.getSelectedIndex();
        if(index == 0)
        {   
            /* Remplir la table */
            DefaultTableModel model = (DefaultTableModel) tablesComptes.getModel();
            while (model.getRowCount() > 0) model.removeRow(0);
            listeComptes = eBanque.consulterComptes();
            for(Compte c : listeComptes)
            {   
                String numCompte = c.getNumCompte();
                Double s = c.getSolde();
                Object decouvert=null;
                Object taux=null;
                if(c instanceof CompteCourant)
                {
                    CompteCourant cc = (CompteCourant)c;
                    decouvert = cc.getDecouvert();
                }
                else
                {
                    CompteEpargne ce = (CompteEpargne)c;
                    taux = ce.getTaux();
                }  
                Date d = c.getDateCreation();
                Long numEmp = c.getEmploye().getNumEmploye();
                Long codeClient = c.getClient().getCodeClient();
                model.addRow(new Object[]{numCompte, s, taux, decouvert, d, codeClient, numEmp});
            }
        
            /* Remplire le clientsComboBox */
            clientsComboBox.removeAllItems();
            for(Client cl : eBanque.consulterClients())
                clientsComboBox.addItem(cl.getCodeClient()+" - "+cl.getNomClient());
        }
        else if(index == 1)
        {
            /* Remplir la table */
            DefaultTableModel model = (DefaultTableModel) clientsTable.getModel();
            while (model.getRowCount() > 0) model.removeRow(0);
            listeClients = eBanque.consulterClients();
            for(Client cl : listeClients)
            {   
                Long code = cl.getCodeClient();
                String np = cl.getNomClient();
                int nbComptes = eBanque.consulterComptes(code).size();
                model.addRow(new Object[]{code, np, nbComptes});
            }
        }
        else if(index == 2)
        {            
            /* Vider les tables des comptes & opérations */
            while (modelComptesClientTable.getRowCount() > 0) modelComptesClientTable.removeRow(0);
            while (modelOperationsTable.getRowCount() > 0) modelOperationsTable.removeRow(0);
            
            /* Remplir la table des clients */
            while (modelClientsTable1.getRowCount() > 0) modelClientsTable1.removeRow(0);
            listeClients = eBanque.consulterClients();
            for(Client cl : listeClients)
            {   
                Long code = cl.getCodeClient();
                String np = cl.getNomClient();
                cl.setComptes(eBanque.consulterComptes(code));
                int nbComptes = cl.getComptes().size();
                modelClientsTable1.addRow(new Object[]{code, np, nbComptes});
            }
            
//            clientsTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener()
//            {
//                public void valueChanged(ListSelectionEvent event) 
//                {   
//                    /* Vider la table des opérations */
//                    while (modelOperationsTable.getRowCount() > 0) modelOperationsTable.removeRow(0);
//                    /* Remplir la table des Comptes de client courant */
//                    Long codeCl = (Long)clientsTable1.getValueAt(clientsTable1.getSelectedRow(), 0);
//                    List<Compte> lc = eBanque.consulterComptes(codeCl);
//                    while (modelComptesClientTable.getRowCount() > 0) modelComptesClientTable.removeRow(0);
//                    for(Compte c : lc)
//                    {   
//                        String numCompte = c.getNumCompte();
//                        Double s = c.getSolde();
//                        Object decouvert=null;
//                        Object taux=null;
//                        if(c instanceof CompteCourant)
//                        {
//                            CompteCourant cc = (CompteCourant)c;
//                            decouvert = cc.getDecouvert();
//                        }
//                        else
//                        {
//                            CompteEpargne ce = (CompteEpargne)c;
//                            taux = ce.getTaux();
//                        }  
//                        Date d = c.getDateCreation();
//                        Long numEmp = c.getEmploye().getNumEmploye();
//                        modelComptesClientTable.addRow(new Object[]{numCompte, s, taux, decouvert, d, numEmp});
//                    }
//                }
//            });
            
//            comptesClientTable.getSelectionModel().addListSelectionListener(new ListSelectionListener()
//            {
//                public void valueChanged(ListSelectionEvent event) 
//                {
//                    String numCompte = comptesClientTable.getValueAt(comptesClientTable.getSelectedRow(), 0).toString();
////                    JOptionPane.showMessageDialog(null, numCompte);
//                    List<Operation> lo = eBanque.consulterOperationsParCompte(numCompte);
//                    /* Remplir la table des Comptes de client courant */
//                    while (modelOperationsTable.getRowCount() > 0) modelOperationsTable.removeRow(0);
//                    for(Operation o : lo)
//                    { 
//                        String type = "V";
//                        if(o instanceof Retrait)
//                            type = "R";
//                        modelOperationsTable.addRow(new Object[]{o.getNumOperation(), o.getMontant(), type, o.getDateOperation(), o.getEmploye().getNumEmploye()});
//                    }
//                }
//            });
            
        }
        else if(index == 3)
        {
            
        }
    }//GEN-LAST:event_clientsTabbedPane1MouseClicked

    private void creeClientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creeClientButtonActionPerformed
        if(npTextBox.getText().isEmpty())
            showMessageDialog(this, "\nVeuillez remplir le champ de nom & prénom.\n\n", "ATTENTION", WARNING_MESSAGE);
        else
        {
            Client client = new Client(npTextBox.getText());  
            eBanque.addClient(client);
            showMessageDialog(this, "\nClient crée avec succes.\n\n", "INFO", INFORMATION_MESSAGE);
            npTextBox.setText("");
            
            /* Remplir la table */
            DefaultTableModel model = (DefaultTableModel) clientsTable.getModel();
            while (model.getRowCount() > 0) model.removeRow(0);
            List<Client> liste = eBanque.consulterClients();
            for(Client cl : liste)
            {   
                Long code = cl.getCodeClient();
                String np = cl.getNomClient();
                int nbComptes = cl.getComptes().size();
                model.addRow(new Object[]{code, np, nbComptes});
            }
        }
    }//GEN-LAST:event_creeClientButtonActionPerformed

    private void clientsTabbedPane1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_clientsTabbedPane1PropertyChange
    }//GEN-LAST:event_clientsTabbedPane1PropertyChange

    private void tauxTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tauxTextBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tauxTextBoxActionPerformed

    private void soldeTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soldeTextBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_soldeTextBoxActionPerformed

    private void epargneRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_epargneRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_epargneRadioButtonActionPerformed

    private void creeCompteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creeCompteButtonActionPerformed
        
        Double solde=null;
        Double taux=null;
        Double decouvert=null;
        try
        {   
            if(soldeTextBox.getText().isEmpty())
            {
                showMessageDialog(null, "\nVeuillez remplir le solde.\n\n", "ATTENTION", WARNING_MESSAGE);
                return;
            }
            soldeTextBox.setForeground(Color.BLACK);
            soldeTextBox.setBackground(Color.WHITE);
            solde = Double.parseDouble(soldeTextBox.getText());
            
        }
        catch(NumberFormatException ex)
        {   
            soldeTextBox.setForeground(Color.WHITE);
            soldeTextBox.setBackground(Color.RED);
            showMessageDialog(null, "\nVeuillez saisir un réel pour le solde.\n\n", "ATTENTION", WARNING_MESSAGE);
            soldeTextBox.setText("");
            soldeTextBox.setForeground(Color.BLACK);
            soldeTextBox.setBackground(Color.WHITE);
        }
        
        
        if(courantRadioButton.isSelected())
        {   
            try
            {   
                if(decouvertTextBox.getText().isEmpty())
                {
                    showMessageDialog(null, "\nVeuillez remplir la valeur du decouvert.\n\n", "ATTENTION", WARNING_MESSAGE);
                    return;
                }
                decouvertTextBox.setForeground(Color.BLACK);
                decouvertTextBox.setBackground(Color.WHITE);
                decouvert = Double.parseDouble(decouvertTextBox.getText());

            }
            catch(NumberFormatException ex)
            {   
                decouvertTextBox.setForeground(Color.WHITE);
                decouvertTextBox.setBackground(Color.RED);
                showMessageDialog(null, "\nVeuillez saisir un réel pour le decouvert.\n\n", "ATTENTION", WARNING_MESSAGE);
                decouvertTextBox.setText("");
                decouvertTextBox.setForeground(Color.BLACK);
                decouvertTextBox.setBackground(Color.WHITE);
            }            
            Compte cc = new CompteCourant(new Date(), solde, decouvert);
            Long codeCl = Long.parseLong(clientsComboBox.getSelectedItem().toString().substring(0, 1));
            eBanque.addCompte(cc, codeCl, EMPLOYE.getNumEmploye());
            showMessageDialog(null, "\nCompte crée avec succes.\n\n", "INFO", INFORMATION_MESSAGE);
        }
        else 
        if(epargneRadioButton.isSelected())
        {
            try
            {   
                if(tauxTextBox.getText().isEmpty())
                {
                    showMessageDialog(null, "\nVeuillez remplir la valeur du taux.\n\n", "ATTENTION", WARNING_MESSAGE);
                    return;
                }
                tauxTextBox.setForeground(Color.BLACK);
                tauxTextBox.setBackground(Color.WHITE);
                taux = Double.parseDouble(tauxTextBox.getText());

            }
            catch(NumberFormatException ex)
            {   
                tauxTextBox.setForeground(Color.WHITE);
                tauxTextBox.setBackground(Color.RED);
                showMessageDialog(null, "\nVeuillez saisir un réel pour le taux.\n\n", "ATTENTION", WARNING_MESSAGE);
                tauxTextBox.setText("");
                tauxTextBox.setForeground(Color.BLACK);
                tauxTextBox.setBackground(Color.WHITE);
            }            
            Compte ce = new CompteEpargne(new Date(), solde, taux);
            Long codeCl = Long.parseLong(clientsComboBox.getSelectedItem().toString().substring(0, 1));
            eBanque.addCompte(ce, codeCl, EMPLOYE.getNumEmploye());
            showMessageDialog(null, "\nCompte crée avec succes.\n\n", "INFO", INFORMATION_MESSAGE);
        }        
        
        DefaultTableModel model = (DefaultTableModel) tablesComptes.getModel();
        while (model.getRowCount() > 0) model.removeRow(0);
        listeComptes = eBanque.consulterComptes();
        for(Compte c : listeComptes)
            {   
                String numCompte = c.getNumCompte();
                Double s = c.getSolde();
                Object decouvert2=null;
                Object taux2=null;
                if(c instanceof CompteCourant)
                {
                    CompteCourant cc = (CompteCourant)c;
                    decouvert2 = cc.getDecouvert();
                }
                else
                {
                    CompteEpargne ce = (CompteEpargne)c;
                    taux2 = ce.getTaux();
                }  
                Date d = c.getDateCreation();
                Long numEmp = c.getEmploye().getNumEmploye();
                Long codeClient = c.getClient().getCodeClient();
                model.addRow(new Object[]{numCompte, s, taux2, decouvert2, d, codeClient, numEmp});
            }
            
        courantRadioButton.setSelected(true);
        ccPanel.setEnabled(true);
        decouvertLabel.setEnabled(true);
        decouvertTextBox.setEnabled(true);
    }//GEN-LAST:event_creeCompteButtonActionPerformed

    private void courantRadioButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_courantRadioButtonMouseClicked
        ccPanel.setEnabled(true);
        decouvertLabel.setEnabled(true);
        decouvertTextBox.setEnabled(true);
        
        cePanel.setEnabled(false);
        tauxLabel.setEnabled(false);
        tauxTextBox.setEnabled(false);
    }//GEN-LAST:event_courantRadioButtonMouseClicked

    private void epargneRadioButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_epargneRadioButtonMouseClicked
        ccPanel.setEnabled(false);
        decouvertLabel.setEnabled(false);
        decouvertTextBox.setEnabled(false);
        
        cePanel.setEnabled(true);
        tauxLabel.setEnabled(true);
        tauxTextBox.setEnabled(true);
    }//GEN-LAST:event_epargneRadioButtonMouseClicked

    private void clientsComboBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_clientsComboBoxPropertyChange
        Long codeCl = Long.parseLong(clientsComboBox.getSelectedItem().toString().substring(0, 1));
        codeClientLabel.setText(codeCl.toString());
    }//GEN-LAST:event_clientsComboBoxPropertyChange

    private void creeCompteButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_creeCompteButtonMousePressed
        creeCompteButton.setBackground(new Color(204,204,204));
    }//GEN-LAST:event_creeCompteButtonMousePressed

    private void creeCompteButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_creeCompteButtonMouseReleased
        creeCompteButton.setBackground(new Color(51,0,0));
    }//GEN-LAST:event_creeCompteButtonMouseReleased

    private void creeClientButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_creeClientButtonMousePressed
        creeClientButton.setBackground(new Color(204,204,204));
    }//GEN-LAST:event_creeClientButtonMousePressed

    private void creeClientButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_creeClientButtonMouseReleased
        creeClientButton.setBackground(new Color(51,0,0));
    }//GEN-LAST:event_creeClientButtonMouseReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        if(clientsTable1.getSelectedRow()<0)
        showMessageDialog(null, "\nVeuillez choisir un client dans la table.\n\n", "ATTENTION", WARNING_MESSAGE);
        else
        {
            int rep = showConfirmDialog(this, "\nEtes-vous sur de vouloir supprimer ce client ?\n\n", "SUPPRIMER", YES_NO_OPTION, QUESTION_MESSAGE);
            if(rep == YES_OPTION)
            {
                eBanque.supprimerClient((Long)clientsTable1.getValueAt(clientsTable1.getSelectedRow(), 0));

                /* Vider les tables des comptes & opérations */
                while (modelComptesClientTable.getRowCount() > 0) modelComptesClientTable.removeRow(0);
                while (modelOperationsTable.getRowCount() > 0) modelOperationsTable.removeRow(0);

                /* Remplir la table des clients */
                while (modelClientsTable1.getRowCount() > 0) modelClientsTable1.removeRow(0);
                listeClients = eBanque.consulterClients();
                for(Client cl : listeClients)
                {
                    Long code = cl.getCodeClient();
                    String np = cl.getNomClient();
                    cl.setComptes(eBanque.consulterComptes(code));
                    int nbComptes = cl.getComptes().size();
                    modelClientsTable1.addRow(new Object[]{code, np, nbComptes});
                }
            }

        }
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        clientsTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_jButton6MouseClicked

    private void clientsTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientsTable1MouseClicked
        /* Vider la table des opérations & comptes*/
        while (modelOperationsTable.getRowCount() > 0) modelOperationsTable.removeRow(0);
        while (modelComptesClientTable.getRowCount() > 0) modelComptesClientTable.removeRow(0);

        /* Remplir la table des Comptes de client courant */
        Long codeCl = (Long)clientsTable1.getValueAt(clientsTable1.getSelectedRow(), 0);
        List<Compte> lc = eBanque.consulterComptes(codeCl);
        for(Compte c : lc)
        {
            String numCompte = c.getNumCompte();
            Double s = c.getSolde();
            Object decouvert=null;
            Object taux=null;
            if(c instanceof CompteCourant)
            {
                CompteCourant cc = (CompteCourant)c;
                decouvert = cc.getDecouvert();
            }
            else
            {
                CompteEpargne ce = (CompteEpargne)c;
                taux = ce.getTaux();
            }
            Date d = c.getDateCreation();
            Long numEmp = c.getEmploye().getNumEmploye();
            modelComptesClientTable.addRow(new Object[]{numCompte, s, taux, decouvert, d, numEmp});
        }
    }//GEN-LAST:event_clientsTable1MouseClicked

    private void comptesClientTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comptesClientTableMouseClicked
        /* Vider la table des opérations */
        while (modelOperationsTable.getRowCount() > 0) modelOperationsTable.removeRow(0);

        String numCompte = comptesClientTable.getValueAt(comptesClientTable.getSelectedRow(), 0).toString();
        List<Operation> lo = eBanque.consulterOperationsParCompte(numCompte);
        /* Remplir la table des opérations sur le compte courant */
        for(Operation o : lo)
        {
            String type = "V";
            if(o instanceof Retrait)
            type = "R";
            modelOperationsTable.addRow(new Object[]{o.getNumOperation(), o.getMontant(), type, o.getDateOperation(), o.getEmploye().getNumEmploye()});
        }
    }//GEN-LAST:event_comptesClientTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JPanel ccPanel;
    private javax.swing.JPanel cePanel;
    private javax.swing.JComboBox clientsComboBox;
    private javax.swing.JTabbedPane clientsTabbedPane1;
    private javax.swing.JTable clientsTable;
    private javax.swing.JTable clientsTable1;
    private javax.swing.JLabel codeClientLabel;
    private javax.swing.JTable comptesClientTable;
    private javax.swing.JRadioButton courantRadioButton;
    private javax.swing.JButton creeClientButton;
    private javax.swing.JButton creeCompteButton;
    private javax.swing.JLabel decouvertLabel;
    private javax.swing.JTextField decouvertTextBox;
    private javax.swing.JRadioButton epargneRadioButton;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTabbedPane jTabbedPane6;
    private javax.swing.JLabel npLabel;
    private javax.swing.JTextField npTextBox;
    private javax.swing.JTable operationsTable;
    private javax.swing.JTextField soldeTextBox;
    public static javax.swing.JTable tablesComptes;
    private javax.swing.JLabel tauxLabel;
    private javax.swing.JTextField tauxTextBox;
    // End of variables declaration//GEN-END:variables
}
