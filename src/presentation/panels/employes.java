/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation.panels;

import java.awt.Color;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import static javax.swing.JOptionPane.*;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.*;
import javax.swing.tree.DefaultMutableTreeNode;
import metier.entities.*;
import static presentation.panels.Authentification_Form.*;

/**
 *
 * @author CY_15
 */
public class employes extends javax.swing.JPanel {

    List<Compte> listeComptes;
    List<Client> listeClients;
    
    DefaultTableModel modelComptesClientTable;
    DefaultTableModel modelClientsTable1;
    DefaultTableModel modelOperationsTable;
    
    DefaultMutableTreeNode root;
    
    public employes() 
    {
        try 
        {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(employes.class.getName()).log(Level.SEVERE, null, ex);
        }
        UIManager.put("Tree.rendererFillBackground", false);
        initComponents();
        
        /* Charger l'arbre */
        root = (DefaultMutableTreeNode)emploesHierarchieTree.getModel().getRoot();
        DefaultMutableTreeNode empCourant = new DefaultMutableTreeNode(EMPLOYE.getNumEmploye()+" - "+EMPLOYE.getNomEmploye());
        root.add(empCourant);
//        root.setUserObject(EMPLOYE.getNumEmploye().toString());
        chargerTree(EMPLOYE.getNumEmploye(), empCourant);
        
        /* Vider les tables */
        DefaultTableModel model = (DefaultTableModel) operationsTable1.getModel();
        while (model.getRowCount() > 0) model.removeRow(0);
        DefaultTableModel model1 = (DefaultTableModel) groupeTable.getModel();
        while (model1.getRowCount() > 0) model1.removeRow(0);
        DefaultTableModel model2 = (DefaultTableModel) comptesClientTable1.getModel();
        while (model2.getRowCount() > 0) model2.removeRow(0);
        
        /* Empolye */
        numLabel.setText(EMPLOYE.getNumEmploye().toString());
        nomPrenomLabel.setText(EMPLOYE.getNomEmploye());
        salaireLabel.setText(String.valueOf(EMPLOYE.getSalaire()));
        if(EMPLOYE.getSupHierarchique() != null)
            supLabel.setText(EMPLOYE.getSupHierarchique().getNomEmploye()); 
        else
            supLabel.setText("N/A");          

        /* Remplir */
        listeComptes = eBanque.consulterComptesParEmpolye(EMPLOYE.getNumEmploye());
        List<Groupe> listeGroupes = eBanque.consulterGroupesParEmpolye(EMPLOYE.getNumEmploye());
        List<Operation> listeOperations = eBanque.consulterOperationsParEmploye(EMPLOYE.getNumEmploye());

        /* Comptes crées */
        if(listeComptes.size()>0)
            for(Compte c : listeComptes)
            {   
                String numCompte = c.getNumCompte();
                String type = "E";
                if(c instanceof CompteCourant)
                    type = "C";
                Long codeClient = c.getClient().getCodeClient();
                Double solde = c.getSolde();
                Date date = c.getDateCreation();

                model2.addRow(new Object[]{numCompte, type, codeClient, solde, date});
            }

        /* Opérations */
        if(listeOperations.size()>0)
            for(Operation o : listeOperations)
            {   
                Long num = o.getNumOperation();
                Double mnt = o.getMontant();
                String type = "V";
                if(o instanceof Retrait)
                    type = "R";
                Date date = o.getDateOperation();

                model.addRow(new Object[]{num, mnt, type, date});
            }

        /* Groupes */
        if(listeGroupes.size()>0)
            for(Groupe g : listeGroupes)
            {   
                Long num = g.getNumGroupe();
                String nom = g.getNomGroupe();

                model1.addRow(new Object[]{num, nom});
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane5 = new javax.swing.JTabbedPane();
        buttonGroup = new javax.swing.ButtonGroup();
        employesTabbedPane = new javax.swing.JTabbedPane();
        jTabbedPane6 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        emploesHierarchieTree = new javax.swing.JTree();
        jScrollPane7 = new javax.swing.JScrollPane();
        operationsTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        groupeTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        comptesClientTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        numLabel = new javax.swing.JLabel();
        nomPrenomLabel = new javax.swing.JLabel();
        salaireLabel = new javax.swing.JLabel();
        supLabel = new javax.swing.JLabel();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        creeEmpButton = new javax.swing.JButton();
        npLabel = new javax.swing.JLabel();
        npTextBox = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        empsTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        npLabel1 = new javax.swing.JLabel();
        empAffComboBox = new javax.swing.JComboBox();
        affecterButton = new javax.swing.JButton();
        npLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        groupsAffList = new javax.swing.JList();
        salaireTextBox1 = new javax.swing.JTextField();
        salaireLabel1 = new javax.swing.JLabel();
        supComboBox = new javax.swing.JComboBox();
        npLabel4 = new javax.swing.JLabel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        consulterEmpByGroupeTable = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        groupesCreesTable = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        consulterGroupeComboBox = new javax.swing.JComboBox();
        soldeTExtBox2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        npLabel3 = new javax.swing.JLabel();
        nomTextBox2 = new javax.swing.JTextField();
        creeGroupeButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(973, 558));

        employesTabbedPane.setBackground(new java.awt.Color(51, 0, 0));
        employesTabbedPane.setForeground(new java.awt.Color(51, 0, 51));
        employesTabbedPane.setOpaque(true);
        employesTabbedPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employesTabbedPaneMouseClicked(evt);
            }
        });
        employesTabbedPane.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                employesTabbedPanePropertyChange(evt);
            }
        });

        jTabbedPane6.setBackground(new java.awt.Color(51, 0, 51));
        jTabbedPane6.setForeground(new java.awt.Color(51, 0, 0));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setForeground(new java.awt.Color(255, 255, 255));

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 0)));

        jScrollPane1.setBackground(new java.awt.Color(51, 0, 0));
        jScrollPane1.setBorder(null);
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        emploesHierarchieTree.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        emploesHierarchieTree.setForeground(new java.awt.Color(51, 0, 0));
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Hiérarchie des employés");
        emploesHierarchieTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        emploesHierarchieTree.setAutoscrolls(true);
        emploesHierarchieTree.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        emploesHierarchieTree.setFocusCycleRoot(true);
        emploesHierarchieTree.setToggleClickCount(1);
        emploesHierarchieTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emploesHierarchieTreeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(emploesHierarchieTree);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
        );

        operationsTable1.setAutoCreateRowSorter(true);
        operationsTable1.setBackground(new java.awt.Color(51, 0, 0));
        operationsTable1.setForeground(new java.awt.Color(255, 255, 255));
        operationsTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Montant", "Type", "Date"
            }
        ));
        operationsTable1.setFillsViewportHeight(true);
        operationsTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane7.setViewportView(operationsTable1);

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel3.setText("Opérations");

        groupeTable.setAutoCreateRowSorter(true);
        groupeTable.setBackground(new java.awt.Color(51, 0, 0));
        groupeTable.setForeground(new java.awt.Color(255, 255, 255));
        groupeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num", "Nom"
            }
        ));
        groupeTable.setFillsViewportHeight(true);
        groupeTable.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane8.setViewportView(groupeTable);

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel6.setText("Groupes");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel7.setText("Comptes crées");

        comptesClientTable1.setAutoCreateRowSorter(true);
        comptesClientTable1.setBackground(new java.awt.Color(51, 0, 0));
        comptesClientTable1.setForeground(new java.awt.Color(255, 255, 255));
        comptesClientTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num", "Type", "Client", "Solde", "Date de création"
            }
        ));
        comptesClientTable1.setFillsViewportHeight(true);
        comptesClientTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane10.setViewportView(comptesClientTable1);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employé", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 12), new java.awt.Color(51, 0, 0))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(51, 0, 0));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 0, 0));
        jLabel8.setText("Nom & prénom  :");

        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 0, 0));
        jLabel9.setText("Salaire                  :");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 0, 0));
        jLabel4.setText("Numéro                :");

        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 0, 0));
        jLabel11.setText("Supérieure          :");

        numLabel.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        numLabel.setForeground(new java.awt.Color(51, 0, 0));

        nomPrenomLabel.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        nomPrenomLabel.setForeground(new java.awt.Color(51, 0, 0));

        salaireLabel.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        salaireLabel.setForeground(new java.awt.Color(51, 0, 0));

        supLabel.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        supLabel.setForeground(new java.awt.Color(51, 0, 0));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(11, 11, 11)
                        .addComponent(supLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(10, 10, 10)
                        .addComponent(nomPrenomLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(10, 10, 10)
                        .addComponent(salaireLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(numLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8)
                    .addComponent(nomPrenomLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9)
                    .addComponent(salaireLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(supLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );

        jTabbedPane6.addTab("", jPanel7);

        employesTabbedPane.addTab(" Employés", new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/employees.png")), jTabbedPane6); // NOI18N
        jTabbedPane6.getAccessibleContext().setAccessibleName("Les informations des comptes");

        jTabbedPane4.setBackground(new java.awt.Color(51, 0, 0));
        jTabbedPane4.setForeground(new java.awt.Color(51, 0, 51));

        jPanel1.setBackground(new java.awt.Color(51, 0, 0));
        jPanel1.setForeground(new java.awt.Color(51, 0, 0));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/employee.png"))); // NOI18N

        creeEmpButton.setBackground(new java.awt.Color(51, 0, 0));
        creeEmpButton.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        creeEmpButton.setForeground(new java.awt.Color(255, 255, 255));
        creeEmpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/good-employee.png"))); // NOI18N
        creeEmpButton.setText("Crée l'employé");
        creeEmpButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        creeEmpButton.setContentAreaFilled(false);
        creeEmpButton.setOpaque(true);
        creeEmpButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                creeEmpButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                creeEmpButtonMouseReleased(evt);
            }
        });
        creeEmpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creeEmpButtonActionPerformed(evt);
            }
        });

        npLabel.setBackground(new java.awt.Color(51, 0, 0));
        npLabel.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        npLabel.setForeground(new java.awt.Color(255, 255, 255));
        npLabel.setText("Prénom & nom :");

        npTextBox.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N

        empsTable.setBackground(new java.awt.Color(51, 0, 0));
        empsTable.setForeground(new java.awt.Color(255, 255, 255));
        empsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Num", "Nom & Prénom", "Groupes"
            }
        ));
        empsTable.setFillsViewportHeight(true);
        empsTable.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(empsTable);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Affecter à un groupe", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 16), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel5.setOpaque(false);

        npLabel1.setBackground(new java.awt.Color(51, 0, 0));
        npLabel1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        npLabel1.setForeground(new java.awt.Color(255, 255, 255));
        npLabel1.setText("Employé ");

        empAffComboBox.setForeground(new java.awt.Color(51, 0, 0));

        affecterButton.setBackground(new java.awt.Color(51, 0, 0));
        affecterButton.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        affecterButton.setForeground(new java.awt.Color(255, 255, 255));
        affecterButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/check.png"))); // NOI18N
        affecterButton.setText("    Affecter");
        affecterButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        affecterButton.setContentAreaFilled(false);
        affecterButton.setOpaque(true);
        affecterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                affecterButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                affecterButtonMouseReleased(evt);
            }
        });
        affecterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                affecterButtonActionPerformed(evt);
            }
        });

        npLabel2.setBackground(new java.awt.Color(51, 0, 0));
        npLabel2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        npLabel2.setForeground(new java.awt.Color(255, 255, 255));
        npLabel2.setText("Groupes");

        jScrollPane3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jScrollPane3.setForeground(new java.awt.Color(51, 0, 0));
        jScrollPane3.setViewportBorder(new javax.swing.border.MatteBorder(null));
        jScrollPane3.setFont(new java.awt.Font("Century Gothic", 0, 10)); // NOI18N

        groupsAffList.setBackground(new java.awt.Color(51, 0, 0));
        groupsAffList.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        groupsAffList.setFont(new java.awt.Font("Century Gothic", 1, 10)); // NOI18N
        groupsAffList.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setViewportView(groupsAffList);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(affecterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(npLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(empAffComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                            .addComponent(npLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(npLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(empAffComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(npLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(affecterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        salaireTextBox1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        salaireTextBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                salaireTextBox1KeyReleased(evt);
            }
        });

        salaireLabel1.setBackground(new java.awt.Color(51, 0, 0));
        salaireLabel1.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        salaireLabel1.setForeground(new java.awt.Color(255, 255, 255));
        salaireLabel1.setText("Salaire                 :");

        supComboBox.setForeground(new java.awt.Color(51, 0, 0));

        npLabel4.setBackground(new java.awt.Color(51, 0, 0));
        npLabel4.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        npLabel4.setForeground(new java.awt.Color(255, 255, 255));
        npLabel4.setText("Supérieure           :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(npLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(npTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(salaireLabel1)
                                    .addComponent(npLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(supComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(salaireTextBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)))
                            .addComponent(creeEmpButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(34, 34, 34)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(npLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(npTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(salaireLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(salaireTextBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(npLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(supComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(creeEmpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane4.addTab("", jPanel1);

        employesTabbedPane.addTab("Crée un employé", new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/worker.png")), jTabbedPane4); // NOI18N

        jTabbedPane3.setBackground(new java.awt.Color(51, 0, 0));

        jPanel2.setBackground(new java.awt.Color(51, 0, 0));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/shared-folder (1).png"))); // NOI18N

        consulterEmpByGroupeTable.setAutoCreateRowSorter(true);
        consulterEmpByGroupeTable.setBackground(new java.awt.Color(51, 0, 0));
        consulterEmpByGroupeTable.setForeground(new java.awt.Color(255, 255, 255));
        consulterEmpByGroupeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num", "Prénom & Nom"
            }
        ));
        consulterEmpByGroupeTable.setFillsViewportHeight(true);
        consulterEmpByGroupeTable.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane5.setViewportView(consulterEmpByGroupeTable);
        if (consulterEmpByGroupeTable.getColumnModel().getColumnCount() > 0) {
            consulterEmpByGroupeTable.getColumnModel().getColumn(0).setPreferredWidth(30);
        }

        groupesCreesTable.setAutoCreateRowSorter(true);
        groupesCreesTable.setBackground(new java.awt.Color(51, 0, 0));
        groupesCreesTable.setForeground(new java.awt.Color(255, 255, 255));
        groupesCreesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num", "Nom"
            }
        ));
        groupesCreesTable.setFillsViewportHeight(true);
        groupesCreesTable.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane6.setViewportView(groupesCreesTable);
        if (groupesCreesTable.getColumnModel().getColumnCount() > 0) {
            groupesCreesTable.getColumnModel().getColumn(0).setPreferredWidth(30);
        }

        jPanel6.setBackground(new java.awt.Color(51, 0, 0));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consulter ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));

        consulterGroupeComboBox.setFont(new java.awt.Font("Tahoma", 0, 21)); // NOI18N
        consulterGroupeComboBox.setForeground(new java.awt.Color(51, 0, 0));
        consulterGroupeComboBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                consulterGroupeComboBoxPropertyChange(evt);
            }
        });

        soldeTExtBox2.setBackground(new java.awt.Color(51, 0, 0));
        soldeTExtBox2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        soldeTExtBox2.setForeground(new java.awt.Color(255, 255, 255));
        soldeTExtBox2.setText("Groupe");

        jLabel1.setBackground(new java.awt.Color(51, 0, 0));
        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("* Choisir un groupe.");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(consulterGroupeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(soldeTExtBox2)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(soldeTExtBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(consulterGroupeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(51, 0, 0));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ajout d'un groupe ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        npLabel3.setBackground(new java.awt.Color(51, 0, 0));
        npLabel3.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        npLabel3.setForeground(new java.awt.Color(255, 255, 255));
        npLabel3.setText("Nom                     :");

        nomTextBox2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N

        creeGroupeButton.setBackground(new java.awt.Color(51, 0, 0));
        creeGroupeButton.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        creeGroupeButton.setForeground(new java.awt.Color(255, 255, 255));
        creeGroupeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/good-employee.png"))); // NOI18N
        creeGroupeButton.setText("Crée le groupe");
        creeGroupeButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        creeGroupeButton.setContentAreaFilled(false);
        creeGroupeButton.setOpaque(true);
        creeGroupeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                creeGroupeButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                creeGroupeButtonMouseReleased(evt);
            }
        });
        creeGroupeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creeGroupeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(creeGroupeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(npLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nomTextBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(npLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomTextBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(creeGroupeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jLabel10)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("", jPanel2);

        employesTabbedPane.addTab("    Crée un groupe", new javax.swing.ImageIcon(getClass().getResource("/presentation/media/icons/folder.png")), jTabbedPane3); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(employesTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(employesTabbedPane)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void employesTabbedPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employesTabbedPaneMouseClicked
        int index = employesTabbedPane.getSelectedIndex();
        if(index == 0)
        {   
            /* Vider les tables */
            DefaultTableModel model = (DefaultTableModel) operationsTable1.getModel();
            while (model.getRowCount() > 0) model.removeRow(0);
            DefaultTableModel model1 = (DefaultTableModel) groupeTable.getModel();
            while (model1.getRowCount() > 0) model1.removeRow(0);
            DefaultTableModel model2 = (DefaultTableModel) comptesClientTable1.getModel();
            while (model2.getRowCount() > 0) model2.removeRow(0);
            
            /* Charger l'arbre */
            root = (DefaultMutableTreeNode)emploesHierarchieTree.getModel().getRoot();
            DefaultMutableTreeNode empCourant = new DefaultMutableTreeNode(EMPLOYE.getNumEmploye()+" - "+EMPLOYE.getNomEmploye());
            root.add(empCourant);
            chargerTree(EMPLOYE.getNumEmploye(), empCourant);
            
            /* Empolye */
            numLabel.setText(EMPLOYE.getNumEmploye().toString());
            nomPrenomLabel.setText(EMPLOYE.getNomEmploye());
            salaireLabel.setText(String.valueOf(EMPLOYE.getSalaire()));
            if(EMPLOYE.getSupHierarchique() != null)
                supLabel.setText(EMPLOYE.getSupHierarchique().getNomEmploye());   
            else
                supLabel.setText("N/A");
            
            /* Remplir */
            listeComptes = eBanque.consulterComptesParEmpolye(EMPLOYE.getNumEmploye());
            List<Groupe> listeGroupes = eBanque.consulterGroupesParEmpolye(EMPLOYE.getNumEmploye());
            List<Operation> listeOperations = eBanque.consulterOperationsParEmploye(EMPLOYE.getNumEmploye());
            
            /* Comptes crées */
            if(listeComptes.size()>0)
                for(Compte c : listeComptes)
                {   
                    String numCompte = c.getNumCompte();
                    String type = "E";
                    if(c instanceof CompteCourant)
                        type = "C";
                    Long codeClient = c.getClient().getCodeClient();
                    Double solde = c.getSolde();
                    Date date = c.getDateCreation();

                    model2.addRow(new Object[]{numCompte, type, codeClient, solde, date});
                }
            
            /* Opérations */
            if(listeOperations.size()>0)
                for(Operation o : listeOperations)
                {   
                    Long num = o.getNumOperation();
                    Double mnt = o.getMontant();
                    String type = "V";
                    if(o instanceof Retrait)
                        type = "R";
                    Date date = o.getDateOperation();

                    model.addRow(new Object[]{num, mnt, type, date});
                }
            
            /* Groupes */
            if(listeGroupes.size()>0)
                for(Groupe g : listeGroupes)
                {   
                    Long num = g.getNumGroupe();
                    String nom = g.getNomGroupe();

                    model1.addRow(new Object[]{num, nom});
                }            
        }
        if(index == 1)
        {
            npTextBox.setText("");
            empAffComboBox.setSelectedIndex(-1);
            groupsAffList.setSelectedIndex(-1);
            
            List<Employe> listeEmp = eBanque.consulterEmployes();
            
            /* Remplir */
            DefaultTableModel model = (DefaultTableModel) empsTable.getModel();
            while (model.getRowCount() > 0) model.removeRow(0);
            empAffComboBox.removeAllItems();
            supComboBox.removeAllItems();
            
            for(Employe e : listeEmp)
            {   
                Long num = e.getNumEmploye();
                String np = e.getNomEmploye();
                int nbG = eBanque.consulterGroupesParEmpolye(num).size();
                model.addRow(new Object[]{num, np, nbG});
                empAffComboBox.addItem(e.getNumEmploye()+" - "+e.getNomEmploye());
                supComboBox.addItem(e.getNumEmploye()+" - "+e.getNomEmploye());
            }
            
            /* */
            DefaultListModel<String> model1 = new DefaultListModel();
            groupsAffList.setModel(model1);  
            model1.removeAllElements();
            List<Groupe> listeGroupe = eBanque.consulterGroupes();
            for(Groupe g : listeGroupe)
                model1.addElement(g.getNumGroupe()+" - "+g.getNomGroupe());
            
        }
        if(index == 2)
        {
            /* Remplir */
            DefaultTableModel model = (DefaultTableModel) groupesCreesTable.getModel();
            while (model.getRowCount() > 0) model.removeRow(0);
            consulterGroupeComboBox.removeAllItems();
            List<Groupe> listeGroupes = eBanque.consulterGroupes();
            for(Groupe g : listeGroupes)
            {
                model.addRow(new Object[]{g.getNumGroupe(), g.getNomGroupe()});
                consulterGroupeComboBox.addItem(g.getNumGroupe()+" - "+g.getNomGroupe());
            }
            consulterGroupeComboBox.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_employesTabbedPaneMouseClicked

    private void employesTabbedPanePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_employesTabbedPanePropertyChange
    }//GEN-LAST:event_employesTabbedPanePropertyChange

    private void creeEmpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creeEmpButtonActionPerformed
        if(npTextBox.getText().isEmpty() || salaireTextBox1.getText().isEmpty())
            showMessageDialog(this, "\nVeuillez remplir tout les champs.\n\n", "ATTENTION", WARNING_MESSAGE);
        else
        {   
            double solde = Double.parseDouble(salaireTextBox1.getText());
            Long numEmp = Long.parseLong(supComboBox.getSelectedItem().toString().substring(0, supComboBox.getSelectedItem().toString().indexOf(" - ")));
            eBanque.addEmploye(new Employe(npTextBox.getText(), solde), numEmp); 
            
            /*** Reitialiser ***/
            npTextBox.setText("");
            salaireTextBox1.setText("");
            empAffComboBox.setSelectedIndex(-1);
            supComboBox.setSelectedIndex(-1);
            groupsAffList.setSelectedIndex(-1);
            
            List<Employe> listeEmp = eBanque.consulterEmployes();
            
            /* Remplir */
            DefaultTableModel model = (DefaultTableModel) empsTable.getModel();
            while (model.getRowCount() > 0) model.removeRow(0);
            empAffComboBox.removeAllItems();
            supComboBox.removeAllItems();
            
            for(Employe e : listeEmp)
            {   
                Long num = e.getNumEmploye();
                String np = e.getNomEmploye();
                int nbG = eBanque.consulterGroupesParEmpolye(num).size();
                model.addRow(new Object[]{num, np, nbG});
                empAffComboBox.addItem(e.getNumEmploye()+" - "+e.getNomEmploye());
                supComboBox.addItem(e.getNumEmploye()+" - "+e.getNomEmploye());
            }            
        }
    }//GEN-LAST:event_creeEmpButtonActionPerformed

    private void creeEmpButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_creeEmpButtonMouseReleased
        creeEmpButton.setBackground(new Color(51,0,0));
    }//GEN-LAST:event_creeEmpButtonMouseReleased

    private void creeEmpButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_creeEmpButtonMousePressed
        creeEmpButton.setBackground(new Color(204,204,204));
    }//GEN-LAST:event_creeEmpButtonMousePressed

    private void emploesHierarchieTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emploesHierarchieTreeMouseClicked
        if (evt.getClickCount() == 2)
        {
            DefaultMutableTreeNode node = (DefaultMutableTreeNode) emploesHierarchieTree.getLastSelectedPathComponent();
            if (node == null)
                showMessageDialog(this, "\nSelectionner un employé.\n\n", "ATTENTION", WARNING_MESSAGE);
            else
            {   
                String numNom = node.getUserObject().toString();
                if(!numNom.equals("Hiérarchie des employés"))
                {   
                    Long numEmp = Long.parseLong(numNom.substring(0, numNom.indexOf(" - ")));
                    
                    /* Vider les tables */
                    DefaultTableModel model = (DefaultTableModel) operationsTable1.getModel();
                    while (model.getRowCount() > 0) model.removeRow(0);
                    DefaultTableModel model1 = (DefaultTableModel) groupeTable.getModel();
                    while (model1.getRowCount() > 0) model1.removeRow(0);
                    DefaultTableModel model2 = (DefaultTableModel) comptesClientTable1.getModel();
                    while (model2.getRowCount() > 0) model2.removeRow(0);

                    /* Empolye */
                    Employe emp = eBanque.consulterEmploye(numEmp);
                    Long numEmploye = emp.getNumEmploye();
                                       
                    numLabel.setText(numEmploye.toString());
                    nomPrenomLabel.setText(emp.getNomEmploye());
                    salaireLabel.setText(String.valueOf(emp.getSalaire()));
                    if(emp.getSupHierarchique() != null)
                        supLabel.setText(emp.getSupHierarchique().getNomEmploye()); 
                    else
                        supLabel.setText("N/A");

                    /* Remplir */
                    List<Compte> listeComptes = eBanque.consulterComptesParEmpolye(numEmploye);
                    List<Groupe> listeGroupes = eBanque.consulterGroupesParEmpolye(numEmploye);
                    List<Operation> listeOperations = eBanque.consulterOperationsParEmploye(numEmploye);
                    
                    /* Comptes crées */
                    if(listeComptes.size()>0)
                        for(Compte c : listeComptes)
                        {   
                            String numCompte = c.getNumCompte();
                            String type = "E";
                            if(c instanceof CompteCourant)
                                type = "C";
                            Long codeClient = c.getClient().getCodeClient();
                            Double solde = c.getSolde();
                            Date date = c.getDateCreation();

                            model2.addRow(new Object[]{numCompte, type, codeClient, solde, date});
                        }

                    /* Opérations */
                    if(listeOperations.size()>0)
                        for(Operation o : listeOperations)
                        {   
                            Long num = o.getNumOperation();
                            Double mnt = o.getMontant();
                            String type = "V";
                            if(o instanceof Retrait)
                                type = "R";
                            Date date = o.getDateOperation();

                            model.addRow(new Object[]{num, mnt, type, date});
                        }

                    /* Groupes */
                    if(listeGroupes.size()>0)
                        for(Groupe g : listeGroupes)
                        {   
                            Long num = g.getNumGroupe();
                            String nom = g.getNomGroupe();

                            model1.addRow(new Object[]{num, nom});
                        } 
                    
                }
            }
        }
        emploesHierarchieTree.setSelectionRow(-1);
        
    }//GEN-LAST:event_emploesHierarchieTreeMouseClicked

    private void affecterButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_affecterButtonMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_affecterButtonMousePressed

    private void affecterButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_affecterButtonMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_affecterButtonMouseReleased

    private void affecterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_affecterButtonActionPerformed
        if(empAffComboBox.getSelectedIndex()<0)
            showMessageDialog(this, "\nVeuillez selecionner un empolyé.\n\n", "ATTENTION", WARNING_MESSAGE);
        else
        {
            Long numEmp = Long.parseLong(empAffComboBox.getSelectedItem().toString().substring(0, empAffComboBox.getSelectedItem().toString().indexOf(" - ")));
            List<String> tabGroupe = groupsAffList.getSelectedValuesList();
            for (String g : tabGroupe) 
            {
                Long numG = Long.parseLong(g.substring(0, g.indexOf(" - ")));
                eBanque.addEmployeToGroupe(numG, numEmp);
            }
            /*** Reitialiser ***/
            empAffComboBox.setSelectedIndex(-1);
            groupsAffList.setSelectedIndex(-1);
            
            List<Employe> listeEmp = eBanque.consulterEmployes();
            
            /* Remplir */
            DefaultTableModel model = (DefaultTableModel) empsTable.getModel();
            while (model.getRowCount() > 0) model.removeRow(0);
            
            for(Employe e : listeEmp)
            {   
                Long num = e.getNumEmploye();
                String np = e.getNomEmploye();
                int nbG = eBanque.consulterGroupesParEmpolye(num).size();
                model.addRow(new Object[]{num, np, nbG});
            }
            showMessageDialog(this, "\nL'employé est affecté au(x) groupe(s) avec succes.\n\n", "INFORMATION", INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_affecterButtonActionPerformed

    private void salaireTextBox1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salaireTextBox1KeyReleased
        try
        {
            Integer.parseInt(salaireTextBox1.getText());
        }
        catch(NumberFormatException ex)
        {
            showMessageDialog(this, "\nVeuillez inserer un nombre.\n\n", "ATTENTION", WARNING_MESSAGE);
            salaireTextBox1.setText("");
        }
    }//GEN-LAST:event_salaireTextBox1KeyReleased

    private void creeGroupeButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_creeGroupeButtonMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_creeGroupeButtonMousePressed

    private void creeGroupeButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_creeGroupeButtonMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_creeGroupeButtonMouseReleased

    private void creeGroupeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creeGroupeButtonActionPerformed
        if(nomTextBox2.getText().isEmpty())
            showMessageDialog(this, "\nVeuillez remplir tout les champs.\n\n", "ATTENTION", WARNING_MESSAGE);
        else
        {   
            eBanque.addGroupe(new Groupe(nomTextBox2.getText()));
            /* Remplir */
            DefaultTableModel model = (DefaultTableModel) groupesCreesTable.getModel();
            while (model.getRowCount() > 0) model.removeRow(0);
            consulterGroupeComboBox.removeAllItems();
            List<Groupe> listeGroupes = eBanque.consulterGroupes();
            for(Groupe g : listeGroupes)
            {
                model.addRow(new Object[]{g.getNumGroupe(), g.getNomGroupe()});
                consulterGroupeComboBox.addItem(g.getNumGroupe()+" - "+g.getNomGroupe());
            }
            consulterGroupeComboBox.setSelectedIndex(-1);
            showMessageDialog(this, "\nLe groupe est crée avec succes.\n\n", "INFORMATION", INFORMATION_MESSAGE);
            nomTextBox2.setText("");
        }
    }//GEN-LAST:event_creeGroupeButtonActionPerformed

    private void consulterGroupeComboBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_consulterGroupeComboBoxPropertyChange
        if(consulterGroupeComboBox.getSelectedIndex()>-1)
        {
            Long idG = Long.parseLong(consulterGroupeComboBox.getSelectedItem().toString().substring(0, consulterGroupeComboBox.getSelectedItem().toString().indexOf(" - ")));
            List<Employe> listeEmp = eBanque.consulterEmployesParGroupe(idG);
            /* Remplir */
            DefaultTableModel model = (DefaultTableModel) consulterEmpByGroupeTable.getModel();
            while (model.getRowCount() > 0) model.removeRow(0);
            for(Employe e : listeEmp)
            {   
                Long num = e.getNumEmploye();
                String np = e.getNomEmploye();
                model.addRow(new Object[]{num, np});
            } 
        }
    }//GEN-LAST:event_consulterGroupeComboBoxPropertyChange
    
    /* Charger le Tree par rapport à l'empoyé connecté */
    public void chargerTree(Long numEmp, DefaultMutableTreeNode node)
    {
        for(Employe e : eBanque.consulterEmployesArbre(numEmp))
        {
            node.add(new DefaultMutableTreeNode(e.getNumEmploye()+" - "+e.getNomEmploye()));
            if(eBanque.consulterEmployesArbre(e.getNumEmploye()).size()>0)
                chargerTree(e.getNumEmploye(), node.getLastLeaf());
            else
                continue;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton affecterButton;
    private javax.swing.ButtonGroup buttonGroup;
    public static javax.swing.JTable comptesClientTable1;
    public static javax.swing.JTable consulterEmpByGroupeTable;
    private javax.swing.JComboBox consulterGroupeComboBox;
    private javax.swing.JButton creeEmpButton;
    private javax.swing.JButton creeGroupeButton;
    private javax.swing.JComboBox empAffComboBox;
    private javax.swing.JTree emploesHierarchieTree;
    private javax.swing.JTabbedPane employesTabbedPane;
    private javax.swing.JTable empsTable;
    public static javax.swing.JTable groupeTable;
    public static javax.swing.JTable groupesCreesTable;
    private javax.swing.JList groupsAffList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTabbedPane jTabbedPane6;
    private javax.swing.JLabel nomPrenomLabel;
    private javax.swing.JTextField nomTextBox2;
    private javax.swing.JLabel npLabel;
    private javax.swing.JLabel npLabel1;
    private javax.swing.JLabel npLabel2;
    private javax.swing.JLabel npLabel3;
    private javax.swing.JLabel npLabel4;
    private javax.swing.JTextField npTextBox;
    private javax.swing.JLabel numLabel;
    public static javax.swing.JTable operationsTable1;
    private javax.swing.JLabel salaireLabel;
    private javax.swing.JLabel salaireLabel1;
    private javax.swing.JTextField salaireTextBox1;
    private javax.swing.JLabel soldeTExtBox2;
    private javax.swing.JComboBox supComboBox;
    private javax.swing.JLabel supLabel;
    // End of variables declaration//GEN-END:variables
}
